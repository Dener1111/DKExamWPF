<Window x:Class="DKExamWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:properties="clr-namespace:DKExamWPF.Properties"
        xmlns:local="clr-namespace:DKExamWPF"        
        mc:Ignorable="d"
        Title="FrogCRUD" Height="450" Width="712"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
         TextElement.Foreground="{DynamicResource MaterialDesignBody}"
         TextElement.FontWeight="Regular"
         TextElement.FontSize="13"
         TextOptions.TextFormattingMode="Ideal"
         TextOptions.TextRenderingMode="Auto"
         Background="{DynamicResource MaterialDesignPaper}"
         FontFamily="{DynamicResource MaterialDesignFont}">
    <Window.Resources>
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Menu">
                <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Menu">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0:0.2" Value="200"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="HideCard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InfoCard">
                <EasingDoubleKeyFrame KeyTime="0" Value="-266"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ShowCard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InfoCard">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0:0.2" Value="-266"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Style x:Key="itemCard" TargetType="materialDesign:Card">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=LargeIcons, Path=IsChecked}" Value="True">
                    <Setter Property="Width" Value="150"></Setter>
                    <Setter Property="Height" Value="200"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=LargeIcons, Path=IsChecked}" Value="false">
                    <Setter Property="Width" Value="100"></Setter>
                    <Setter Property="Height" Value="133"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=generiCard, Path=IsMouseOver}" Value="True">
                    <Setter Property="Background" Value="Red" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonClose">
            <BeginStoryboard x:Name="CloseMenu_BeginStoryboard" Storyboard="{StaticResource CloseMenu}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpen">
            <BeginStoryboard x:Name="OpenMenu_BeginStoryboard" Storyboard="{StaticResource OpenMenu}"></BeginStoryboard>
        </EventTrigger>

        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonHideCard">
            <BeginStoryboard x:Name="HideCard_BeginStoryboard" Storyboard="{StaticResource HideCard}"></BeginStoryboard>
        </EventTrigger>
        <!--<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonShowCard">
            <BeginStoryboard x:Name="ShowCard_BeginStoryboard" Storyboard="{StaticResource ShowCard}"></BeginStoryboard>
        </EventTrigger>-->
    </Window.Triggers>
    <Window.DataContext>
        <local:MainViewModel></local:MainViewModel>
    </Window.DataContext>
    <Grid>
        <Grid Name="Menu" Grid.ZIndex="2" HorizontalAlignment="Left" Margin="-200,0,0,0"
              Width="180" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.RowSpan="2">
            <Grid.Effect>
                <DropShadowEffect Direction="0" Color="Black" ShadowDepth="2" Opacity=".3" BlurRadius="5"/>
            </Grid.Effect>
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Label Margin="10, 2, 0, 0" FontSize="10" Foreground="HotPink" Content="{x:Static properties:Resources.Menu}"/>
            <Button Name="ButtonClose" HorizontalAlignment="Right"
                    VerticalAlignment="Top" Width="25" Height="25"
                    Style="{DynamicResource MaterialDesignToolButton}"
                    Content="{materialDesign:PackIcon Close}" />
            <StackPanel Margin="0,25,0,0" >
                <Button Style="{DynamicResource MaterialDesignToolButton}">
                    <StackPanel Orientation="Horizontal" Width="148">
                        <materialDesign:PackIcon Kind="FolderOpen" VerticalAlignment="Center" Width="20" Height="20"/>
                        <TextBlock VerticalAlignment="Center" Padding="15" Text="{x:Static properties:Resources.OpenButton}"/>
                    </StackPanel>
                </Button>
                <Button Style="{DynamicResource MaterialDesignToolButton}">
                    <StackPanel Orientation="Horizontal" Width="148">
                        <materialDesign:PackIcon  Kind="ContentSave"  VerticalAlignment="Center" Width="20" Height="20"/>
                        <TextBlock VerticalAlignment="Center" Padding="15" Text="{x:Static properties:Resources.SaveButton}"/>
                    </StackPanel>
                </Button>
                <Button Style="{DynamicResource MaterialDesignToolButton}" Command="{Binding DelAllCommand}">
                    <StackPanel Orientation="Horizontal" Width="148">
                        <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Width="20" Height="20"/>
                        <TextBlock VerticalAlignment="Center" Padding="15" Text="{x:Static properties:Resources.DeleteButton}"/>
                    </StackPanel>
                </Button>
                <Label Margin="10, 2, 0, 0"  FontSize="10" Foreground="HotPink" Content="{x:Static properties:Resources.Admin}"></Label>
                <DockPanel Width="148" Height="30">
                    <ToggleButton IsChecked="{Binding Edit}" Name="CanEdit" DockPanel.Dock="Right" Background="Pink"/>
                    <TextBlock  VerticalAlignment="Center" FontSize="14" Text="{x:Static properties:Resources.Edit}" Foreground="DimGray"/>
                </DockPanel>
                <Label Margin="10, 2, 0, 0"  FontSize="10" Foreground="HotPink" Content="{x:Static properties:Resources.Settings}"></Label>
                <DockPanel Width="148" Height="30">
                    <ToggleButton Name="LargeIcons" IsChecked="{Binding LargeIcons}" DockPanel.Dock="Right" Background="Pink"></ToggleButton>
                    <TextBlock VerticalAlignment="Center" FontSize="14" Text="{x:Static properties:Resources.LargeIcons}" Foreground="DimGray"/>
                </DockPanel>
                <DockPanel Width="148" Height="30">
                    <ToggleButton IsChecked="{Binding DarkTheme}" DockPanel.Dock="Right" Background="Pink"></ToggleButton>
                    <TextBlock VerticalAlignment="Center" FontSize="14" Text="{x:Static properties:Resources.DarkTheme}" Foreground="DimGray"/>
                </DockPanel>
                <DockPanel Width="148" Height="30">
                    <RadioButton GroupName="lang" VerticalAlignment="Center" IsChecked="{Binding English}"
                                 Command="{Binding EngCommand}" Background="Pink" DockPanel.Dock="Right"/>
                    <TextBlock VerticalAlignment="Center" FontSize="14" Text="English" Foreground="DimGray"/>
                </DockPanel>
                <DockPanel Width="148" Height="30">
                    <RadioButton GroupName="lang" VerticalAlignment="Center" IsChecked="{Binding Russian}"
                                 Foreground="DimGray" Command="{Binding RusCommand}"  DockPanel.Dock="Right" Background="Pink"/>
                    <TextBlock VerticalAlignment="Center" FontSize="14" Text="Russian" Foreground="DimGray"/>
                </DockPanel>
            </StackPanel>
        </Grid>
        <Grid  Grid.ZIndex="1" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="0"></RowDefinition>
                <RowDefinition Height="25"/>
                <RowDefinition ></RowDefinition>
            </Grid.RowDefinitions>
            <Rectangle Grid.RowSpan="2">
                <Rectangle.Effect>
                    <DropShadowEffect BlurRadius="5" Direction="-90" ShadowDepth="2" Opacity=".3"/>
                </Rectangle.Effect>
                <Rectangle.Fill>
                    <SolidColorBrush Color="Pink"/>
                </Rectangle.Fill>
            </Rectangle>

            <Button Name="ButtonOpen"
                HorizontalAlignment="Left" Height="25" Width="25"
                Style="{DynamicResource MaterialDesignToolButton}"
                Content="{materialDesign:PackIcon menu}" Grid.RowSpan="2"/>
            <ScrollViewer Grid.Row="2" Grid.ZIndex="1" VerticalScrollBarVisibility="Hidden" >
                <ListBox Name="CardsListBox" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}">
                    <ListBox.ItemsPanel  >
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate >
                        <DataTemplate>
                            <materialDesign:Card Name="genericCard" Style="{StaticResource itemCard}">
                                <Grid>
                                    <Image VerticalAlignment="Center" HorizontalAlignment="Center" Grid.ZIndex="-1"
                                           Source="{Binding Image}" Stretch="UniformToFill"></Image>
                                    <WrapPanel FlowDirection="RightToLeft">
                                        <Button Height="25" Width="25"  IsEnabled="{Binding ElementName=CanEdit, Path=IsChecked}"
                                                Style="{DynamicResource MaterialDesignToolButton}" Content="{materialDesign:PackIcon delete}" Command="{Binding DelCommand}"
                                                DataContext="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=DataContext}"></Button>
                                        <Button Name="ButtonShowCard" Height="25" Width="25" IsEnabled="{Binding ElementName=CanEdit, Path=IsChecked}"
                                        Style="{DynamicResource MaterialDesignToolButton}"
                                        Content="{materialDesign:PackIcon edit}">
                                            <Button.Triggers>
                                                <!--<EventTrigger RoutedEvent="ButtonBase.Click">
                                                    <BeginStoryboard x:Name="ShowCard_BeginStoryboard" Storyboard="{StaticResource ShowCard}"></BeginStoryboard>
                                                </EventTrigger>-->
                                            </Button.Triggers>
                                        </Button>
                                    </WrapPanel>
                                    <TextBlock Grid.ZIndex="1" VerticalAlignment="Bottom" Text="{Binding Manufacturer}"
                                       Foreground="DimGray" HorizontalAlignment="Center"></TextBlock>
                                </Grid>
                            </materialDesign:Card>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </ScrollViewer>
            <Button Name="AddButton" Grid.ZIndex="2" Grid.Row="2" HorizontalAlignment="Right"
                    VerticalAlignment="Bottom" Margin="0,0,20,20" Background="Pink"
                    Foreground="DimGray" Command="{Binding AddCommand}"
                    BorderBrush="Pink" Style="{DynamicResource MaterialDesignFloatingActionLightButton}"
                    Content="{materialDesign:PackIcon plus, Size=25}" IsEnabled="{Binding ElementName=CanEdit, Path=IsChecked}" />
        </Grid>
        <materialDesign:Card Name="InfoCard" Grid.RowSpan="3" Grid.ZIndex="3"
                                 HorizontalAlignment="Right" VerticalAlignment="Center"
                                 Margin="0,26,0,0" Width="250" Height="380" DataContext="{Binding SelectedItem}">
            <!-- -258 -->
            <materialDesign:Card.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </materialDesign:Card.RenderTransform>
            <Grid>
                <Button Name="ButtonHideCard" HorizontalAlignment="Right" VerticalAlignment="Top" Height="25"
                            Width="25" Style="{DynamicResource MaterialDesignToolButton}" Grid.ZIndex="3"
                            Content="{materialDesign:PackIcon close}" Grid.RowSpan="2"></Button>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <Image Source="{Binding Image}"></Image>
                        <WrapPanel >
                            <TextBlock FontWeight="SemiBold"  VerticalAlignment="Center">
                                <Run Text="{x:Static properties:Resources.CardImage}"></Run>
                                <Run Text=": "></Run>
                            </TextBlock>
                            <TextBox Text="{Binding Image}" CaretBrush="{x:Null}" BorderBrush="{x:Null}"/>
                        </WrapPanel>
                        <WrapPanel>
                            <TextBlock FontWeight="SemiBold"  VerticalAlignment="Center">
                                <Run Text="{x:Static properties:Resources.CardManufacturer}"></Run>
                                <Run Text=": "></Run>
                            </TextBlock>
                            <TextBox Text="{Binding Manufacturer}" CaretBrush="{x:Null}" BorderBrush="{x:Null}"/>
                        </WrapPanel>
                        <WrapPanel>
                            <TextBlock FontWeight="SemiBold"  VerticalAlignment="Center">
                                <Run Text="{x:Static properties:Resources.CardModel}"></Run>
                                <Run Text=": "></Run>
                            </TextBlock>
                            <TextBox Text="{Binding Model}" CaretBrush="{x:Null}" BorderBrush="{x:Null}"/>
                        </WrapPanel>
                        <WrapPanel>
                            <TextBlock FontWeight="SemiBold"  VerticalAlignment="Center">
                                <Run Text="{x:Static properties:Resources.CardCPU}"></Run>
                                <Run Text=": "></Run>
                            </TextBlock>
                            <TextBox Text="{Binding CPU}" CaretBrush="{x:Null}" BorderBrush="{x:Null}"/>
                        </WrapPanel>
                        <WrapPanel>
                            <TextBlock FontWeight="SemiBold"  VerticalAlignment="Center">
                                <Run Text="{x:Static properties:Resources.CardGPU}"></Run>
                                <Run Text=": "></Run>
                            </TextBlock>
                            <TextBox Text="{Binding GPU}" CaretBrush="{x:Null}" BorderBrush="{x:Null}"/>
                        </WrapPanel>
                        <WrapPanel>
                            <TextBlock FontWeight="SemiBold"  VerticalAlignment="Center">
                                <Run Text="{x:Static properties:Resources.CardBattary}"></Run>
                                <Run Text=": "></Run>
                            </TextBlock>
                            <TextBox Text="{Binding Battary}" CaretBrush="{x:Null}" BorderBrush="{x:Null}"/>
                        </WrapPanel>
                        <DockPanel Margin="0,5,0,0">
                            <TextBlock FontWeight="SemiBold"  VerticalAlignment="Center">
                                <Run Text="{x:Static properties:Resources.CardTouchscreen}"></Run>
                            </TextBlock>
                            <CheckBox DockPanel.Dock="Right" Margin="0,0,4,0" Background="Pink"
                                          IsChecked="{Binding Touchscreen}" HorizontalAlignment="Right"></CheckBox>
                        </DockPanel>
                        <DockPanel Margin="0,10,0,0">
                            <TextBlock FontWeight="SemiBold"  VerticalAlignment="Center">
                                <Run Text="{x:Static properties:Resources.CardHeadphoneJack}"></Run>
                            </TextBlock>
                            <CheckBox DockPanel.Dock="Right" Margin="0,0,4,0" Background="Pink"
                                          IsChecked="{Binding HeadphoneJack}" HorizontalAlignment="Right"></CheckBox>
                        </DockPanel>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </materialDesign:Card>
    </Grid>
</Window>
